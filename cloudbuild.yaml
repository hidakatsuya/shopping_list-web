steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args: [
      "-c",
      "docker build --build-arg SECRET_KEY_BASE=$$SECRET_KEY_BASE -t gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME} . "
    ],
    secretEnv: ["SECRET_KEY_BASE"]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME}"]

  - id: "migrate database"
    name: "gcr.io/cloud-builders/docker"
    args: [
      "run", "gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME}", "--env", "GCP_PROJECT_ID=${PROJECT_ID}",
      "bin/rails", "db:migrate"
    ]

  - id: "deploy app"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args: [
      "run", "deploy", "${_APP_SERVICE_NAME}",
      "--platform", "managed",
      "--region", "us-west1",
      "--image", "gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME}",
      "--max-instances", "1",
      "--set-env-vars", "GCP_PROJECT_ID=${PROJECT_ID}"
    ]

  - id: "deploy job"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args: [
      "run", "deploy", "${_JOB_SERVICE_NAME}",
      "--platform", "managed",
      "--region", "us-west1",
      "--image", "gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME}",
      "--max-instances", "1",
      "--set-env-vars", "GCP_PROJECT_ID=${PROJECT_ID}"
    ]

substitutions:
  _APP_IMAGE_NAME: shopping-list-app
  _APP_SERVICE_NAME: shopping-list-app
  _JOB_SERVICE_NAME: shopping-list-job

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/SECRET_KEY_BASE/versions/latest
    env: SECRET_KEY_BASE

images:
  - "gcr.io/${PROJECT_ID}/${_APP_IMAGE_NAME}"
